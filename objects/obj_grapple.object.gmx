<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_grapple</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>char_inst = instance_nearest(x,y,obj_char)
spd = 60
acc = -2.6
destroy_dist = 40
damp = .95
t = 0
grap_invul = 10
collided = false
inst = false


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>imdir = arctan2(char_inst.y-y, x-char_inst.x)
image_angle = imdir*180/pi-90

if global.grapped{
    if inst = false{
        inst = instance_place(x, y, obj_block)
    }
    hspd = 0
    vspd = 0
    if instance_exists(inst){
        xdiff = x - inst.x
        ydiff = y - inst.y
        //r = sqrt(sqr(xdiff)+sqr(ydiff))
        blockdir = arctan2(xdiff,ydiff)
        dang = inst.angvel*pi/180
        //newang = blockdir+dang
        x = inst.x+(xdiff*cos(dang)+ydiff*sin(dang))+inst.hspd
        y = inst.y+(xdiff*-sin(dang)+ydiff*cos(dang))+inst.vspd
    }else{
        hspd = 0
        vspd = 0
    }
}else{
    inst = false
    collided = false
    dist = sqrt(power(x-char_inst.x, 2) + power(y-char_inst.y,2))
    hacc = acc*cos(imdir)
    vacc = acc*-sin(imdir)
    hspd += hacc
    vspd += vacc
    spd += acc //this is just for determining when it starts to pass through objects
    if dist &lt; destroy_dist and t &gt; grap_invul{
        instance_destroy()
    }
    if spd &gt; 0{
        //vertical collisions
        if (place_meeting(x,y+vspd, obj_block))
        {
            inst = instance_place(x, y+vspd, obj_block)
            i=0
            while(!place_meeting(x,y-sign(vspd),obj_block) and i &lt; abs(vspd)) //and !place_meeting(x,y+sign(vspd),obj_block) and i &lt; abs(vspd)) //this collision detection should allow interesting glitch in which you float through a long 1 by n passage of blocks while fitting perfectly on it
            {
                y += sign(vspd)
                i += 1
            }
            //vspd = 0
            collided = true
        }
        
        //horizontal collisions
        if (place_meeting(x+hspd,y, obj_block))
        {
            inst = instance_place(x+hspd, y, obj_block)
            i=0
            while(!place_meeting(x-sign(hspd),y,obj_block) and i &lt; abs(hspd)) //and !place_meeting(x,y+sign(vspd),obj_block) and i &lt; abs(vspd)) //this collision detection should allow interesting glitch in which you float through a long 1 by n passage of blocks while fitting perfectly on it
            {
                x += sign(hspd)
                i += 1
            }
            //hspd = 0
            collided = true
        }
        if collided{
            hspd = 0
            vspd = 0
            spd = 0
            if global.grap{
                global.grapped = true
            }
        }
    }
    hspd*=damp
    vspd*=damp
    
}
x += hspd
y += vspd
t+=1

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
